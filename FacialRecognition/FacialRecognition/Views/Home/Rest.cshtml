@{
    ViewBag.Title = "Rest";
}

<div>
    <div id="rectangle">Descripción</div>
    <div style="padding-left:10%; text-align:justify; width:80%">
        <p>
            Si bien el término REST se refería originalmente a un conjunto de principios de arquitectura, en la
            actualidad se usa en el sentido más amplio para describir cualquier interfaz web simple que utiliza
            XML y HTTP, sin las abstracciones adicionales de los protocolos basados en patrones de intercambio
            de mensajes como el protocolo de servicios web SOAP. Es posible diseñar sistemas de servicios web de
            acuerdo con el estilo arquitectural REST de Fielding y también es posible diseñar interfaces XMLHTTP
            de acuerdo con el estilo de llamada a procedimiento remoto (RPC), pero sin usar SOAP. Estos dos usos
            del término REST causan cierta confusión en las discusiones técnicas, aunque RPC no es un ejemplo de
            REST.
        </p>

        <p>Los sistemas que siguen los principios REST se llaman con frecuencia RESTful.</p>

        <p>REST afirma que la web ha disfrutado de escalabilidad como resultado de una serie de diseños fundamentales clave:</p>
        <ul>
            <li>
                Un protocolo cliente/servidor sin estado: cada mensaje HTTP contiene toda la información necesaria
                para comprender la petición.
            </li>
            <li>
                Un conjunto de operaciones bien definidas que se aplican a todos los recursos de información: HTTP
                en sí define un conjunto pequeño de operaciones, las más importantes son POST, GET, PUT y DELETE.
            </li>
            <li>
                Una sintaxis universal para identificar los recursos
            </li>
        </ul>
    </div>
</div>
<br /><br />

<div>
    <div id="rectangle">Conclusión</div>
    <div style="padding-left:10%; text-align:justify; width:80%">
        <p>
            La tecnologia Web API es muy eficiente porque nos permite crear servicios basados en peticiones HTTP
            para extraer, agregar, modificar y borrar informacion, el que se uso es en base a RESTFUL, sin embargo
            no es el unico estandar, pero ahorita paso a eso, mediante acceso de URLs uno puede hacer consultas de l
            la informacion, el formato en que se presenta la informacion puede ser en XML o JSON, preferible usar
            JSON, la respuesta es rapida en si, ademas es muy factible cuando se ocupa extraer datos y presentarlo en
            de escritorios, tabletas y moviles, mientras que una desventaja es que uno ocupa configurar
            este para manejar los niveles de seguridad, esto para tener permiso de usar la API, como el protoco OAuth2.
        </p>
        <p>
            Mientras que SOAP es un estandar que hace lo mismo que lo anterior, pero no es muy viable para manejar
            informacion con respecto a moviles, pero si es facil de manejar para pasar la informacion a traves de
            firewalls y proxies, por lo cual las restricciones no son un problema para el momento en que se ocupe
            usar la API desarollada, he llegado a presenciar este tipo de problemas cuando he ocupado usar APIs de
            google y requieren de tener acceso de AOuth2, para obtener una llave con el estandar REST ful, por lo cual
            debe tener sus ventajas, la desventaja es la mencionada que no es viable para la informacion con los moviles
        </p>
        <p>
            Tambien el SOAP soporta el protoclo de SMTP, que es muy usado para la transmisicion de correos electronicos,
            lo cual es muy vital.
        </p>
    </div>
</div>